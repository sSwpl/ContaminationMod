plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

version = '1.0.0'
group = 'com.example.contamination'
base {
    archivesName = 'contamination'
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    // Mappingi dla 1.20.1 (official)
    mappings channel: 'official', version: '1.20.1'

    runs {
        client {
            workingDirectory project.file('run')
            args '--username', 'Dev'
            mods {
                contamination {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            mods {
                contamination {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            args '--mod', 'contamination', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                contamination {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven { url = 'https://maven.minecraftforge.net' }
    // JEI repo
    maven { url = 'https://maven.blamejared.com' }
}

dependencies {
    // Forge 1.20.1 (dopasuj do swojej wersji Forge jeżeli inna)
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.0'

    // JEI 1.20.1 (Forge) – API do kompilacji + runtime do lokalnych testów
    compileOnly fg.deobf("mezz.jei:jei-1.20.1-forge:15.3.0.23")
    runtimeOnly fg.deobf("mezz.jei:jei-1.20.1-forge:15.3.0.23")
}

tasks.withType(ProcessResources).configureEach {
    // Jeśli w META-INF/mods.toml użyjesz ${version}, to zostanie wstrzyknięte
    inputs.property 'version', project.version
    filesMatching('META-INF/mods.toml') {
        expand 'version': project.version
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        // opcjonalnie: skonfiguruj własne repo publikacyjne
    }
}